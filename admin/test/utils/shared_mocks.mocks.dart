// Mocks generated by Mockito 5.4.0 from annotations
// in activity_admin/test/utils/shared_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:survey_admin/data/data_sources/interfaces/filesystem_data_source.dart'
    as _i3;
import 'package:survey_admin/data/data_sources/interfaces/session_storage_data_source.dart'
    as _i5;
import 'package:survey_admin/domain/repository_interfaces/file_system_repository.dart.dart'
    as _i6;
import 'package:survey_admin/domain/repository_interfaces/session_storage_repository.dart'
    as _i7;
import 'package:activity_builder/activity_sdk.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCommonTheme_0 extends _i1.SmartFake implements _i2.CommonTheme {
  _FakeCommonTheme_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActivityData_1 extends _i1.SmartFake implements _i2.ActivityData {
  _FakeActivityData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FilesystemDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilesystemDataSource extends _i1.Mock
    implements _i3.FilesystemDataSource {
  MockFilesystemDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void downloadActivityData(Map<String, dynamic>? exportJson) =>
      super.noSuchMethod(
        Invocation.method(
          #downloadActivityData,
          [exportJson],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i2.ActivityData?> importActivityData() => (super.noSuchMethod(
        Invocation.method(
          #importActivityData,
          [],
        ),
        returnValue: _i4.Future<_i2.ActivityData?>.value(),
      ) as _i4.Future<_i2.ActivityData?>);
}

/// A class which mocks [SessionStorageDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionStorageDataSource extends _i1.Mock
    implements _i5.SessionStorageDataSource {
  MockSessionStorageDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveActivityData(_i2.ActivityData? activityData) => super.noSuchMethod(
        Invocation.method(
          #saveActivityData,
          [activityData],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FileSystemRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileSystemRepository extends _i1.Mock
    implements _i6.FileSystemRepository {
  MockFileSystemRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void downloadActivityData(Map<String, dynamic>? exportJson) =>
      super.noSuchMethod(
        Invocation.method(
          #downloadActivityData,
          [exportJson],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i2.ActivityData?> importActivityData() => (super.noSuchMethod(
        Invocation.method(
          #importActivityData,
          [],
        ),
        returnValue: _i4.Future<_i2.ActivityData?>.value(),
      ) as _i4.Future<_i2.ActivityData?>);
}

/// A class which mocks [SessionStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionStorageRepository extends _i1.Mock
    implements _i7.SessionStorageRepository {
  MockSessionStorageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void saveActivityData(_i2.ActivityData? activityData) => super.noSuchMethod(
        Invocation.method(
          #saveActivityData,
          [activityData],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ActivityData].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityData extends _i1.Mock implements _i2.ActivityData {
  MockActivityData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.QuestionData<dynamic>> get questions => (super.noSuchMethod(
        Invocation.getter(#questions),
        returnValue: <_i2.QuestionData<dynamic>>[],
      ) as List<_i2.QuestionData<dynamic>>);
  @override
  _i2.CommonTheme get commonTheme => (super.noSuchMethod(
        Invocation.getter(#commonTheme),
        returnValue: _FakeCommonTheme_0(
          this,
          Invocation.getter(#commonTheme),
        ),
      ) as _i2.CommonTheme);
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
  @override
  _i2.ActivityData copyWith({
    List<_i2.QuestionData<dynamic>>? questions,
    _i2.CommonTheme? commonTheme,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #questions: questions,
            #commonTheme: commonTheme,
          },
        ),
        returnValue: _FakeActivityData_1(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #questions: questions,
              #commonTheme: commonTheme,
            },
          ),
        ),
      ) as _i2.ActivityData);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
